from django_bootstrap import bootstrap
bootstrap()

import sys
import csv

from django.contrib.auth.models import User
from appl.models import Faculty, AdmissionRound
from backoffice.models import AdjustmentMajor, AdjustmentMajorSlot

NUMS = """
00219111613
00219121681
00219121691
00219121701
00219121711
00219121721
00219121722
00219131731
00219131732
00219131741
00219131742
00219141751
00219141761
00219141771
00219141781
00219151791
00219322941
00219312931
00219161811
00219161821
00219161831
00219161841
00219181861
00219181871
00219181881
00219181891
00219181901
00219181911
00219181921
00219181862
00219181872
00219181892
00219191931
00219191941
00219191951
00219191961
00219191971
00219201981
00219201982
00219201991
00219202001
00219202011
00219202021
00219202031
00219202041
00219202042
00219202051
00219202061
00219202062
00219202071
00219202081
00219202082
00219202151
00219202152
00219202161
00219202231
00219202361
00219202351
00219202301
00219201992
00219202012
00219212431
00219212432
00219171851
00219222441
00219222442
00219232451
00219232461
00219232481
00219242491
00219242501
00219242511
00219242521
00219242531
00219242541
00219242551
00219242512
00219242492
00219242522
00219242502
00219242532
00219242542
00219242552
00219252561
00219252571
00219252581
00219252591
00219252601
00219252611
00219252582
00219252592
00219262631
00219262641
00219262651
00219262621
00219262661
00219262672
00219272681
00219272691
00219272701
00219272711
00219272721
00219272731
00219282761
00219282771
00219282741
00219282751
00219282781
00219282791
00219282801
00219282811
00219292831
00219292841
00219292851
00219292861
00219292871
00219292881
00219292891
00219292901
00219302911
00219302921
00219010541
00220331801
00220010011
00220010021
00220010031
00220010041
00220010071
00220010051
00220010061
00220010043
00220020081
00220030141
00220030161
00220040171
00220040181
00220040191
00220040201
00220040202
00220040211
00220040221
00220040231
00220040241
00220040251
00220040261
00220040281
00220040291
00220040301
00220040311
00220040271
00220040272
00220040323
00220040333
00220050571
00220050361
00220050371
00220050381
00220050391
00220050401
00220050411
00220050421
00220050431
00220050441
00220050451
00220050481
00220050362
00220050372
00220050392
00220050412
00220050422
00220050452
00220050472
00220050492
00220050363
00220050423
00220050463
00220050503
00220050525
00220050535
00220050395
00220050445
00220060581
00220060591
00220060601
00220060611
00220060621
00220070641
00220070642
00220070651
00220070652
00220070661
00220070662
00220070691
00220070692
00220080701
00220080702
00220080751
00220080731
00220080741
00220080721
00220080752
00220080732
00220080742
00220080722
00220080981
00220080781
00220080791
00220080801
00220080811
00220080821
00220080831
00220080782
00220080792
00220080802
00220080812
00220080822
00220080832
00220080921
00220080931
00220080941
00220080951
00220080961
00220080971
00220080922
00220080932
00220080942
00220080952
00220080962
00220080972
00220080851
00220080861
00220080871
00220080881
00220080891
00220080901
00220080852
00220080862
00220080872
00220080882
00220080892
00220080902
00220081001
00220081011
00220081021
00220081031
00220081041
00220081002
00220081012
00220081022
00220081032
00220081042
00220081081
00220081091
00220081101
00220081111
00220081121
00220081131
00220081141
00220081151
00220081261
00220081271
00220081281
00220081291
00220081301
00220081311
00220081262
00220081272
00220081282
00220081292
00220081302
00220081312
00220080982
00220081172
00220081182
00220081192
00220081202
00220081212
00220081222
00220081232
00220081242
00220091331
00220101351
00220101361
00220101371
00220101381
00220101391
00220101372
00220101382
00220101392
00220101403
00220111411
00220111421
00220111422
00220111431
00220111441
00220111451
00220111461
00220111471
00220111481
00220111591
00220111631
00220111641
00220111651
00220111661
00220111671
00220111511
00220111521
00220111531
00220111541
00220111551
00220111561
00220111571
00220111581
00220111622
00220111613
"""

NUMS35 = """
00210331801
00210010011
00210010021
00210010031
00210010041
00210010051
00210010061
00210010071
00210020081
00210030141
00210040171
00210040181
00210040191
00210040201
00210040211
00210040221
00210040231
00210040241
00210040251
00210040261
00210040271
00210040281
00210040291
00210040301
00210040311
00210040333
00210050361
00210050371
00210050381
00210050391
00210050401
00210050411
00210050421
00210050431
00210050441
00210050451
00210050481
00210060581
00210060611
00210060621
00210070641
00210070651
00210070661
00210070691
00210070662
00210070692
00210080701
00210080702
00210080731
00210080751
00210080741
00210080721
00210080752
00210080742
00210080771
00210080911
00210080841
00210080772
00210080912
00210080842
00210080981
00210080991
00210080992
00210081071
00210081251
00210081252
00210101351
00210101361
00210101371
00210101381
00210101382
00210101391
00210101392
00210101403
00210111411
00210111421
00210111431
00210111441
00210111461
00210111511
00210111591
00210111613
00210111622
00210111631
00210121681
00210121691
00210121701
00210121711
00210121721
00210131731
00210131741
00210131742
00210141751
00210141761
00210141771
00210141781
00210151791
00210312931
00210322941
00210060601
"""

def print_slot(slot):
    r = slot.admission_round_number

    faculty = slot.faculty
    prefix = ['วิทยาเขต' + faculty.campus.title + ' ' + faculty.title,
              '"' + slot.adjustment_major.title + '"',
              slot.cupt_code]
    data = [str(slot.original_slots), str(slot.current_slots)]
    if slot.original_slots != slot.current_slots:
        data.append("*")
    else:
        data.append("")
    row = prefix + [''] * ((r-2)*3) + data
    print(','.join(row))


def main():
    for num in NUMS35.split():
        num = num.strip()
        if num == '':
            continue

        slots = AdjustmentMajorSlot.objects.filter(cupt_code=num).all()
        if len(slots)==0:
            print('ERROR:', num)
            continue

        slot = slots[0]
        print_slot(slot)

    """
    rounds = [2,3,4,5]

    for r in rounds:
        slots = AdjustmentMajorSlot.objects.filter(admission_round_number=r).order_by('cupt_code').all()
        for slot in slots:
            print_slot(slot)
    """
    
if __name__ == '__main__':
    main()
    
